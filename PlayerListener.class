package com.drtshock.obsidiandestroyer.listeners;

import com.drtshock.obsidiandestroyer.ObsidianDestroyer;
import com.drtshock.obsidiandestroyer.managers.*;
import com.drtshock.obsidiandestroyer.util.Util;
import org.bukkit.*;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.inventory.ItemStack;

public class PlayerListener
    implements Listener
{

    public PlayerListener()
    {
    }

    public void onJoin(PlayerJoinEvent event)
    {
        if(ObsidianDestroyer.getInstance().getNeedsUpdate() && event.getPlayer().hasPermission("obsidiandestroyer.admin"))
        {
            event.getPlayer().sendMessage((new StringBuilder()).append(ChatColor.DARK_RED).append("Version ").append(ChatColor.GRAY).append(ObsidianDestroyer.getInstance().getLatestVersion()).append(ChatColor.DARK_RED).append(" is available for update.").toString());
            event.getPlayer().sendMessage((new StringBuilder()).append(ChatColor.DARK_RED).append("Download it from http://dev.bukkit.org/potato/obsidiandestroyer").toString());
        }
    }

    public void onInteract(PlayerInteractEvent event)
    {
        Player player = event.getPlayer();
        if(player.getItemInHand().getAmount() > 0 && event.getAction() == Action.LEFT_CLICK_BLOCK && event.hasBlock())
        {
            Material itemInHand = player.getItemInHand().getType();
            Block block = event.getClickedBlock();
            if(ConfigManager.getInstance().getDurabilityCheckItem().equals(itemInHand) && player.hasPermission("obsidiandestroyer.check"))
            {
                MaterialManager mm = MaterialManager.getInstance();
                if(mm.getDurabilityEnabled(block.getType().name()))
                {
                    if(player.getGameMode() == GameMode.CREATIVE)
                    {
                        event.setCancelled(true);
                    }
                    int amount = ChunkManager.getInstance().getMaterialDurability(block).intValue();
                    int max = (int)Math.round((double)mm.getDurability(block.getType().name()) * Util.getMultiplier(block.getLocation()));
                    player.sendMessage((new StringBuilder()).append(ChatColor.DARK_RED).append("vlexio.fr > durabilite :").append(ChatColor.WHITE).append(max - amount).append("/").append(max).toString());
                }
            }
        }
    }
}
